{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","toogle","paused","mute","unmute","toogleMute","AutoPlay","AutoPause","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","entries","entry","isVisible","intersectionRatio","console","log","document","addEventListener","visibilityState","video","querySelector","button","btnMute","getElementById","onclick","navigator","serviceWorker","register","catch","error","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,ACAA,SDASA,ACAAoB,QAAT,GDAA,ACAoB,CDACnB,ACAC,MDAtB,EAA6B;AAC3B,OAAKC,KAAL,GAAaD,MAAM,CAACE,EAApB;AACA,ACAFiB,ODAOhB,CCAC,CAACE,KDAP,GAAeL,CCAjB,CAAmBa,GAAnB,CDAuB,CAACV,CCAC,MDAR,IAAkB,ACADG,EDAhC,ICAuB,EAAiB;AEE1C,AFDE,IECI+B,EFDA,CAAC/B,EECI,GAAG4B,CFDD,CAACzB,KAAZ,CECoB,CAAC6B,AFDF,aECP,CAAuB,OAAvB,CAAd;AHAE,AGCF,AFDIhC,IECEiC,AFDFjC,GDAGF,GGCK,AFDF,CAACK,EECIyB,GFDX,GDAF,ACAiB,EECI,CAACI,CFDpB,YECW,CAAuB,QAAvB,CAAf;AHAC,AGCD,AFDG,IECGE,OAAO,GAAGN,QAAQ,CAACO,cAAT,CAAwB,YAAxB,CAAhB;AACA,IAAMnC,ADPAc,MCOM,GAAG,IAAIrB,oBAAJ,CAAgB;AHA/BA,AGCEG,AFFAI,EEEAJ,AFFAI,EEEE,EAAE+B,EFFE,CAAC9B,EDCE,AGAoB,CHAnBF,CCDV,QDCF,CAAsBD,YAAtB,GAAqC,YAAW;AAAA,AGE9CD,AFFD,CALD,CEOEA,OAAO,EAAE,CAAC,IAAIgB,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AAFoB,ADN7B,CCMa,CAAf,qBDNgB;AFOd,AEPc,MFORd,MAAM,GAAG,ACAFa;ADCXZ,AGGJgC,IHHIhC,EGGE,CAACmC,CHHC,EAAE,IGGV,GAAiB;AHHP,AGGO,ADVb,SCUmBpC,ADVde,IFOO,EGGa,CAACP,EHHV,AEPhB,CFOiBP,EEPA,CCUE,CHHP,CGGC,CHHP,AEPN;AFOM,AGGO,ADTb,CCSJ,IHJiB,IELRe,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFOAf,AENA,IFMAA,KAAK,AENAgB,EFME,oBENP,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFMO,AGGXiB,ADRG,OCQI,CAACE,KHHS,EGGjB,GHHqB,AGGH,CHHIlC,KAAL,EAAN;AAAA,AGGO,KHLD,IGKOF,MAAM,CAACY,UAAP,EAAN;AHFdjB,AGEc,CAAlB,GHFIA,KAAK,EAAE,KAAKA,KAHC;;AAIb,AGGJ,IAAI,IHHIQ,KAAJ,GAAY,OGGOkC,CDRjBrC,QCQN,ADRc,ECQoB;AHF5B,AGGJqC,ADRE,ECQFA,SAAS,ADRFrC,CCQGsC,CHHC,IELT,CFKc3C,EELAK,GFKL,CAAWG,CGGtB,CAAwBoC,ADRtB,GFKE,KGGJ,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiD,UAAAC,KAAK,EAAI;AHFvD,AGGDf,ADPA,ICOAA,CHTa,KEEPP,CCOC,CAACQ,GAAR,CAAYc,EDPE,GCOG,ADPA,CCOCC,GDPGtB,ICOrB,gBDPiB,CAAyB,KAAKJ,kBAA9B,EAAkD;ACQpE,ADPGD,GCKJ,KDLIA,SAAS,EAAE,KAAKA;AFIlB,AGIH,ADTsE,OAAlD,CFKbZ,AELJ,KFKA,CAAUC,KAAV,EAAiB;AACf,AEFFe,MAAAA,KFEOxB,GEFC,CAAC0B,CFEP,CAAWlB,KAAX,AEFF,CAAiB,EFEIC,GEFCJ,EFEpB,IEFe,CAAYL,KAA7B;AFGC,AEFF;;AFPc,GAAf;AAYA,OAAKE,OAAL,CAAaQ,OAAb,CAAqB,UAAAC,MAAM,AEHRgB,EFGY,OEHH;AFI1BhB,AEHA,IFGAA,MAAM,AEHAiB,CFGChB,GAAP,CAAW,AEHA,GAAGe,EFGd,KEHqB,CAAC,CAAD,CAArB;AFID,AEFC,GFAF,OEAQE,SAAS,GAAGD,KAAK,CAACE,iBAAN,IAA2B,KAAKV,SAAlD;AFGH,CAhBD;AEeI,UAAIS,SAAJ,EAAe;AFGnB/B,AEFM,WFEK,CAACM,CEFDC,MAAL,CAAYC,CFElB,CAAsBA,EEFhB,EFEN,GAA6B,YAAW;AACtC,AEFG,OFEEN,AEJH,KFIF,CAAWM,AEFF,IFET;AACD,AEFK,CFAN,YEAWD,MAAL,CAAYE,KAAZ;AACD;AFGLT,WAAW,CAACM,SAAZ,CAAsBG,KAAtB,GAA8B,YAAW;AACvC,AEHEwB,MAAAA,CFGG/B,KAAL,CAAWO,AEHF,CAACyB,GAAR,CFGF,AEHcJ,KAAZ;AFIH,AEFGK,CFAJ,KEAIA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,KAAKX,sBAAnD;AACD;AFGHzB,WAAW,CAACM,SAAZ,CAAsBS,MAAtB,GAA+B,YAAW;AACxC,MAAI,KAAKb,KAAL,CAAWc,MAAf,EAAuB;AACrB,SAAKR,IAAL,gCEHuB;AFIxB,AEHC,GFCF,MAEO,CEHCuB,SAAS,GAAGI,QAAQ,CAACE,eAAT,KAA6B,SAA/C;AFIA,AEHAJ,MAAAA,GFGKxB,IEHE,CFGP,AEHQyB,GAAR,CAAYH,SAAZ;AFID;AACF,AEHG,CFHJ,SEGQA,SAAJ,EAAe;AACb,aAAKxB,MAAL,CAAYC,IAAZ;AFINR,AEHK,OAFD,IFKO,CAACM,CEHD,QFGX,CAAsBW,IAAtB,GAA6B,YAAW;AACtC,AEHI,OFGCf,KAAL,CAAWQ,AEHFH,KFGT,CEHI,CAAYE,CFGG,IAAnB,AEHI;AFIL,AEHI,CFCL;AEAG;AFIHT,WAAW,CAACM,SAAZ,CAAsBY,MAAtB,GAA+B,YAAW;AACxC,OAAKhB,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACD,CAFD;;AAIAV,WAAW,CAACM,SAAZ,CAAsBa,UAAtB,GAAmC,YAAW;AAC5C,MAAI,KAAKjB,IENImB,CFMT,CAAWX,KAAf,EAAsB;AACpB,SAAKQ,MAAL;AACD,GAFD,MAEO;AACL,SAAKD,IAAL;AACD;AACF,CAND;;eAQejB","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\n  this.media = config.el;\n  this.plugins = config.plugins || [];\n\n  this._initPlugins();\n}\n\nMediaPlayer.prototype._initPlugins = function() {\n  const player = {\n    play: () => this.play(),\n    pause: () => this.pause(),\n    media: this.media,\n    get muted() {\n      return this.media.muted;\n    },\n    set muted(value) {\n      this.media.muted = value;\n    }\n  };\n\n  this.plugins.forEach(plugin => {\n    plugin.run(this);\n  });\n};\n\nMediaPlayer.prototype.play = function() {\n  this.media.play();\n};\n\nMediaPlayer.prototype.pause = function() {\n  this.media.pause();\n};\n\nMediaPlayer.prototype.toogle = function() {\n  if (this.media.paused) {\n    this.play();\n  } else {\n    this.pause();\n  }\n};\n\nMediaPlayer.prototype.mute = function() {\n  this.media.muted = true;\n};\n\nMediaPlayer.prototype.unmute = function() {\n  this.media.muted = false;\n};\n\nMediaPlayer.prototype.toogleMute = function() {\n  if (this.media.muted) {\n    this.unmute();\n  } else {\n    this.mute();\n  }\n};\n\nexport default MediaPlayer;\n","function AutoPlay() {}\n\nAutoPlay.prototype.run = function(player) {\n  if (!player.muted) {\n    player.muted = true;\n  }\n  player.play();\n};\nexport default AutoPlay;\n","class AutoPause {\n  constructor() {\n    this.threshold = 0.25;\n    this.handleIntersection = this.handleIntersection.bind(this);\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n  }\n\n  run(player) {\n    this.player = player;\n\n    const observer = new IntersectionObserver(this.handleIntersection, {\n      threshold: this.threshold\n    });\n\n    observer.observe(this.player.media);\n  }\n\n  handleIntersection(entries) {\n    const entry = entries[0];\n\n    const isVisible = entry.intersectionRatio >= this.threshold;\n\n    if (isVisible) {\n      this.player.play();\n    } else {\n      this.player.pause();\n    }\n    console.log(entry);\n\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\n  }\n\n  handleVisibilityChange() {\n    const isVisible = document.visibilityState === \"visible\";\n    console.log(isVisible);\n\n    if (isVisible) {\n      this.player.play();\n    } else {\n      this.player.pause();\n    }\n  }\n}\n\nexport default AutoPause;\n","import MediaPlayer from \"./MediaPlayer.js\";\nimport AutoPlay from \"./plugins/AutoPlay.js\";\nimport AutoPause from \"./plugins/AutoPause.js\";\n\nconst video = document.querySelector(\"video\");\nconst button = document.querySelector(\"button\");\nconst btnMute = document.getElementById(\"muteButton\");\nconst player = new MediaPlayer({\n  el: video,\n  plugins: [new AutoPlay(), new AutoPause()]\n});\n\nbutton.onclick = () => player.toogle();\nbtnMute.onclick = () => player.toogleMute();\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker.register(\"/sw.js\").catch(error => {\n    console.log(error.message);\n  });\n}\n"]}